Project: NeckHump.com (Posture Site)
Owner: posture-site
Updated: 2025-10-11

# Project Context

This is a Next.js website about neck posture and posture correction. The site focuses on providing comprehensive guides for fixing neck hump and forward head posture. Content includes exercises, ergonomic advice, product recommendations, and educational articles. SEO optimization is important for this health/wellness content site. All pages should have proper canonical URLs pointing to www.neckhump.com.

# Technical Learnings

## General Development Tips

- For search results, ensure proper handling of different character encodings (UTF-8) for international queries
- When using seaborn styles in matplotlib, use 'seaborn-v0_8' instead of 'seaborn' as the style name due to recent seaborn version changes
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities
- When searching for recent news, use the current year (2025) instead of previous years, or simply use the "recent" keyword to get the latest information

## Next.js & SEO

### JSX/React Syntax Rules
- **HTML Entity Escaping Required**: In JSX text content, comparison operators `<` and `>` followed by numbers MUST be escaped as `&lt;` and `&gt;`
- **Common Mistake**: Writing `>10%`, `<44 degrees`, `>30 minutes` directly in JSX text causes build errors like "Expected token" or "Unexpected numeric literal"
- **Correct Format**: Use `&gt;10%`, `&lt;44 degrees`, `&gt;30 minutes` in all JSX text content
- **Where It Applies**: List items, paragraphs, spans, headings - anywhere with text content containing measurements or comparisons
- **Where It Doesn't Apply**: Inside JavaScript expressions `{value > 10}` or className attributes
- **Detection Pattern**: Search for ` [<>][0-9]` or `[<>] [0-9]` patterns in .js/.jsx/.tsx files to find unescaped operators
- **Build Error Indicators**: Webpack syntax errors pointing to numeric literals, "Did you mean `{'>'}` or `&gt;`?" messages
- **Health/Medical Content**: Especially common in medical thresholds (CVA >52°, wall test >8cm, symptoms >24hr)

### Sitemap Management
- **Complete Coverage Required**: All pages must be included in sitemap.js - missing pages cause GSC "No referring sitemaps detected" errors
- **URL Consistency Critical**: All canonical URLs, structured data, and sitemap entries must use consistent domain format (www.neckhump.com)
- **JSON-LD Structured Data**: Must use same domain format as canonical URLs to prevent dual referring page signals in GSC

### Google Search Console Issues Resolution
- **Mixed www/non-www URLs**: Causes multiple referring page entries and SEO confusion
- **Missing Sitemap Entries**: Pages not in sitemap.js won't be discovered by search engines properly
- **Structured Data Consistency**: JSON-LD @id and url fields must match canonical URL format exactly

### Performance Optimization Patterns
- **Core Web Vitals Focus**: FCP (<1.2s), LCP (<2.5s), Speed Index (<3.4s) are primary metrics
- **Simplification Strategy**: Remove complexity that doesn't measurably improve Core Web Vitals
- **Browser-Native Optimizations**: Trust framework optimizations (Tailwind, Next.js) over custom solutions

### Routing & Link Integrity
- **Route Inventory Workflow**: Use `**/app/**/page.{js,tsx}` pattern to enumerate all routes
- **Link Extraction**: Use `grep -R "href=\"/"` and `href: '...'` patterns to find Next Link targets
- **Validation**: Diff extracted links against filesystem routes and sitemap entries to catch broken links before deploy
- **Why it matters**: Broken internal links waste crawl budget, harm UX, and dilute AEO signals. Orphaned pages rarely get crawled or cited by LLMs

## Answer Engine Optimization (AEO) - 2025

### Core Concepts
- **AEO Definition**: Optimizing to show up in LLM responses (ChatGPT, Claude, Perplexity, Gemini)
- **Core Mechanism**: LLMs use RAG (Retrieval Augmented Generation) = web search + summarization of citations
- **Key Difference from SEO**: Need to be mentioned in MULTIPLE citations, not just rank #1
- **Long-Tail is Back**: Average ChatGPT query is ~25 words vs ~6 words for Google
- **Early-Stage Advantage**: No domain authority required - can win immediately via citations (Reddit, YouTube, blogs)
- **Quality Requirement**: 100% AI-generated content doesn't work (~10-12% of indexed content). AI-assisted (human-edited) works great
- **Information Gain Principle**: Must say something others haven't said, avoid being too "typical" (signals rewritten content)

### AEO 7-Step Playbook (Health/Wellness Sites)
1. **Question Research**: Convert SEO keywords to natural questions. Mine from: sales calls, support tickets, Reddit threads
2. **Answer Tracking**: Use tracking tools to measure "share of voice" across ChatGPT, Perplexity, Gemini. Must run same question multiple times (answers vary)
3. **Citation Analysis**: Identify who shows up now: YouTube, Reddit, Quora, affiliates (Dot Dash Meredith, Forbes), health blogs
4. **On-Site Content**: Answer ALL follow-up questions. Focus on: symptoms, exercises, causes, treatments, product recommendations, success stories. Help center is critical
5. **Reddit Strategy**: Create authentic account, identify as site owner, give genuinely useful answers in relevant threads (posture, back pain, ergonomics subreddits)
6. **YouTube Videos**: Create videos for specific health questions (e.g., "How to fix forward head posture at home", "Best neck hump exercises for beginners")
7. **Rigorous Testing**: 100 questions control group, 100 test group. Track 2 weeks before/after. Compare. Reproduce 10x before trusting results

### AEO Content Requirements
- **Topic-Based**: Each page targets thousands of related questions, not single keywords
- **Comprehensive Follow-ups**: Must answer: symptoms, causes, treatments, exercises, products, timeframes, alternatives, when to see doctor
- **Help Center Optimization**: Move from subdomain to subdirectory. Cover long-tail questions (specific use cases, combinations, special situations)
- **Cross-Linking**: Aggressive internal linking between related articles and help center pages
- **Original Research**: Studies, data, case studies increase citation likelihood
- **Medical Authority Signals**: Reviewer credentials, last updated dates, evidence-based badges

### AEO Attribution Challenge
- Users see answer in ChatGPT → open new tab → type brand name → come via "Google branded search" or "direct traffic"
- Cannot rely on referral traffic alone
- Must ask "How did you hear about us?" post-conversion
- Multi-touch attribution critical (50+ touchpoints typical for health decisions)

### Health/Wellness Citation Targets
- **Tier 1 Affiliates**: Healthline, WebMD, Medical News Today, Verywell Health
- **Tier 2 Health Blogs**: Smaller health blogs, physiotherapy sites, ergonomics experts
- **Reddit**: r/posture, r/backpain, r/Ergonomics, r/flexibility
- **YouTube**: Physical therapists, chiropractors, ergonomics experts creating exercise videos
- **Quora**: Health and wellness questions about posture, neck pain, ergonomics

### AEO Conversion Quality
- LLM traffic converts 6x better than Google search traffic (Webflow case study)
- Users are highly primed from conversation with AI
- Strong intent signal - they've asked multiple follow-up questions
- If you're the recommended answer, trust is pre-established

### What Doesn't Work in AEO
- ❌ 100% AI-generated content (gets filtered out)
- ❌ Fake Reddit accounts and spam (community policing effective)
- ❌ Only focusing on ranking #1 (need multiple citation mentions)
- ❌ Ignoring long-tail questions (huge opportunity missed)
- ❌ Subdomain help centers (less authority than subdirectories)

## UI/UX Patterns

### Table of Contents Implementation
- TOC components require exact ID matching between heading elements and navigation links
- Missing IDs cause broken sidebar navigation - every heading referenced in TOC array must have corresponding `id` attribute
- Fixed sidebars need adequate bottom padding (pb-32) on main content to prevent covering bottom content during scroll
- Use semantic anchor links (#heading-id) for smooth navigation

### TOC Scroll Behavior
- Fixed-position TOCs should hide when users scroll past article content to prevent floating over footer/bottom sections
- Use scroll listener with getBoundingClientRect() to detect when article bottom passes viewport threshold
- Add transition-opacity for smooth hide/show animation

### TOC Layout Overlap Fix
- Fixed-position desktop TOCs (positioned with `fixed left-8 w-64`) require main content containers to have corresponding left margin (`xl:ml-80`) to prevent content overlap
- Without proper margin, TOC sidebar blocks main content on desktop screens
- Apply `xl:ml-80` to main content containers on pages using TableOfContents component

### Health Website UX
- Medical websites need neutral color palette vs bright commercial colors
- Display medical authority signals upfront: reviewer credentials, last updated dates, evidence-based badges
- Use professional formatting without emojis in navigation
- Educational tone instead of marketing/promotional language
- Medical disclaimer prominently displayed in footer

## Component Patterns

### Help Center Article Structure
- Reusable HelpArticle component with: Short Answer blocks, key considerations, step-by-step guidance, medical disclaimers
- Comprehensive SEO: proper meta tags, canonical URLs, structured data (JSON-LD)
- "When to see doctor" sections for medical safety
- Related questions for internal linking
- FAQ sections with JSON-LD structured data
- Mobile-friendly responsive design

### AEO-Optimized Content Blocks
- Short Answer section for LLM consumption
- Key Takeaways numbered list
- References with PubMed links
- Related questions with internal links
- Medical authority banner at top of page

## Project Template System
- **Template Structure**: Global template at `/Users/thxu/Desktop/cursor-workspace/.project-template/` with tools/, .cursorrules, requirements.txt, env.example
- **Setup Scripts**: Both Python (cross-platform) and Bash versions for new project initialization
- **Placeholder System**: Template .cursorrules uses placeholders like [PROJECT_NAME], [PROJECT_TYPE] for customization
- **Directory Structure**: Template copies tools/ directory, requirements.txt, and customized .cursorrules to new projects
- **Cross-Platform Support**: Python script handles Windows/Mac/Linux differences in file permissions and paths
